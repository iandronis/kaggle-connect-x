{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u2197 With this repo, I take part for the Kaggle competition called Connect X . What is Connect X? \u2197 Connect X is a simple two players board game. Each player has one color of checkers and in front of them they have a board of #number_of_columns and #number_of_rows. In each turn, the player throws a checker and his/her goal is to form a line with them (horizontally, vertically, diagonally) . The length of this line would be X, hence the name of \u201cConnect X\u201d. So for example, in Connect 4 you must form a line of 4 checkers. Repo\u2019s goal \u2197 With this project, I\u2019ll try implementing some Machine Learning techniques, evaluate those solutions and see my place in the competition\u2019s leaderboard.","title":"Introduction"},{"location":"#introduction","text":"With this repo, I take part for the Kaggle competition called Connect X .","title":"Introduction"},{"location":"#what-is-connect-x","text":"Connect X is a simple two players board game. Each player has one color of checkers and in front of them they have a board of #number_of_columns and #number_of_rows. In each turn, the player throws a checker and his/her goal is to form a line with them (horizontally, vertically, diagonally) . The length of this line would be X, hence the name of \u201cConnect X\u201d. So for example, in Connect 4 you must form a line of 4 checkers.","title":"What is Connect X?"},{"location":"#repos-goal","text":"With this project, I\u2019ll try implementing some Machine Learning techniques, evaluate those solutions and see my place in the competition\u2019s leaderboard.","title":"Repo's goal"},{"location":"markdown_examples/","text":"Markdown Examples \ud83d\udcdd \u2197 List \u2197 First bullet Second bullet Table \u2197 Key Value entry1_key entry1_value entry2_key entry2_value entry3_key entry3_value Code Snippet \u2197 bash ./manage.py generateschema > openapi-schema.yml python class MyClass : MY_STATIC_VARIABLE = \"something_static\" def __init__ ( self ): self . x1 = 1 ... json { \"key_A\" : \"value_A\" , \"key_B\" : [ \"value_B1\" , \"value_B2\" , \"value_B3\" ] } Comment/Quote \u2197 \u201cAny fool can write code that a computer can understand. Good programmers write code that humans can understand.\u201d \u2013 Martin Fowler Admonitions \u2197 Note Add some note here. Hint Some hint text with a code snippet and a link here: docker pull python (See also docker hub .) See here for more. Import other file \u2197","title":"Markdown Examples"},{"location":"markdown_examples/#markdown-examples","text":"","title":"Markdown Examples \ud83d\udcdd"},{"location":"markdown_examples/#list","text":"First bullet Second bullet","title":"List"},{"location":"markdown_examples/#table","text":"Key Value entry1_key entry1_value entry2_key entry2_value entry3_key entry3_value","title":"Table"},{"location":"markdown_examples/#code-snippet","text":"bash ./manage.py generateschema > openapi-schema.yml python class MyClass : MY_STATIC_VARIABLE = \"something_static\" def __init__ ( self ): self . x1 = 1 ... json { \"key_A\" : \"value_A\" , \"key_B\" : [ \"value_B1\" , \"value_B2\" , \"value_B3\" ] }","title":"Code Snippet"},{"location":"markdown_examples/#commentquote","text":"\u201cAny fool can write code that a computer can understand. Good programmers write code that humans can understand.\u201d \u2013 Martin Fowler","title":"Comment/Quote"},{"location":"markdown_examples/#admonitions","text":"Note Add some note here. Hint Some hint text with a code snippet and a link here: docker pull python (See also docker hub .) See here for more.","title":"Admonitions"},{"location":"markdown_examples/#import-other-file","text":"","title":"Import other file"}]}